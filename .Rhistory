E=replace(E,E=='#VALUE!',0),
E=as.numeric(as.character(E)),
G=H+E)->
h
head(h)
qplot(time,H,data=filter(h,time<10000))
fixH<- function(t){
mod<- lm(H~poly(time,3),data=t)
t %>%
mutate(H=H-predict(mod,newdata=t))->
t
return(t)
}
h %>%
group_by(block) %>%
do(fixH(.)) %>%
mutate(G=H+E)->
ht
head(ht)
qplot(time,H,data=filter(ht,time<10000))
h %>%
group_by(block) %>%
do(fixH(.)) %>%
mutate(G=H+E)->
h
h%>%
select(G,H,Targ,block,subject,task,blocknum)%>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
# gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
gazeshifts=markSaccadesDouble(Gv,threshold1=100,threshold2=20,
driftcorrect = TRUE,markFixations = FALSE),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
saveRDS(hm,'sideproject4-28-2018.RDS')
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(ggplot2)
library(mgcv)
library(plotly)
library(ggpubr)
library(stringr)
# dataset <- diamonds
# dataset <- readRDS('KnightData3-2-2018.RDS')
# dataset <- readRDS('KnightBoxplotData3-2-2018.RDS')
# hm <- readRDS('dashboardData3-3-2018.RDS')
# hm <- readRDS('dashboardData2018-03-19.RDS')
# hm <- readRDS('antisaccadeDashboard2018-3-29.RDS')
# hm <- readRDS('antisaccadeDashboard2018-4-07.RDS')
hm <- readRDS('antisaccadeDashboard2018-4-22.RDS')
samplerate<- 304.7508/1000
hm %>%
mutate(blocknum=as.factor(str_sub(block,7)),
gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp,
anti_saccade=(gaze.amp*target.amp)<0) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<500,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
anti_saccade,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
# hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80)))
hpp <- mutate(hpp,amp.bins.20 = cut(abs(target.amp),breaks=c(0,20,40,60,80)))
hpp <- mutate(hpp,amp.bins.15 = cut(abs(target.amp),breaks=c(0,15,30,45,60,75,90)))
hpp <- mutate(hpp,amp.bins.10 = cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
hpp <- mutate(hpp,gaze.amp.bins.10 = cut(abs(gaze.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
#remove NA bins and extra blocks
hpp %>%
filter(!is.na(amp.bins.15))->
hpp
hpp %>%
mutate(blocknum= as.factor(blocknum),
block= as.factor(block),
subject=as.factor(subject))->
dataset
#antisaccade success rate
dataset %>%
group_by(subject,block,anti_saccade) %>%
tally() %>%
mutate(success_rate=n[anti_saccade]/sum(n))->
assuc
library(dplyr)
#antisaccade success rate
dataset %>%
group_by(subject,block,anti_saccade) %>%
tally() %>%
mutate(success_rate=n[anti_saccade]/sum(n))->
assuc
write.csv(assuc,'AntiSaccadeSuccessRate.csv')
names(dataset)
names(hm)
qplot(IGP,data=hm)+facet_wrap(~block)
qplot(missing.gs,data=hm)+facet_wrap(~block)
qplot(missing.gs,data=dataset)+facet_wrap(~block)
hm %>% group_by(block) %>% tally()
dataset %>% group_by(block) %>% tally()
#antisaccade success rate
dataset %>%
group_by(subject,block) %>%
summarize(total=n(),
nAnti=sum(anti_saccade),
percent_anti=nAnti/total)->
assuc
#antisaccade success rate
dataset %>%
group_by(subject,block) %>%
summarize(total=n(),
nAnti=sum(anti_saccade),
percent_anti=nAnti/total)->
assuc
write.csv(assuc,'AntiSaccadeSuccessRate.csv')
qplot(gaze.onset.ms,data=hm)+facet_wrap(~block)
qplot(gaze.onset,data=hm)+facet_wrap(~block)
qplot((gaze.onset-200)/samplerate,data=hm)+facet_wrap(~block)
qplot((gaze.onset-200)/samplerate,data=hm)+facet_wrap(~block)+geom_vline(xintercept = 150)
qplot((gaze.onset-200)/samplerate,data=hm)+facet_wrap(~block)+geom_vline(xintercept = c(150,500))
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(ggplot2)
library(mgcv)
library(plotly)
library(ggpubr)
library(stringr)
# dataset <- diamonds
# dataset <- readRDS('KnightData3-2-2018.RDS')
# dataset <- readRDS('KnightBoxplotData3-2-2018.RDS')
# hm <- readRDS('dashboardData3-3-2018.RDS')
# hm <- readRDS('dashboardData2018-03-19.RDS')
# hm <- readRDS('antisaccadeDashboard2018-3-29.RDS')
# hm <- readRDS('antisaccadeDashboard2018-4-07.RDS')
hm <- readRDS('antisaccadeDashboard2018-4-22.RDS')
samplerate<- 304.7508/1000
hm %>%
mutate(blocknum=as.factor(str_sub(block,7)),
gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp,
anti_saccade=(gaze.amp*target.amp)<0) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<1000,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
anti_saccade,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
# hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80)))
hpp <- mutate(hpp,amp.bins.20 = cut(abs(target.amp),breaks=c(0,20,40,60,80)))
hpp <- mutate(hpp,amp.bins.15 = cut(abs(target.amp),breaks=c(0,15,30,45,60,75,90)))
hpp <- mutate(hpp,amp.bins.10 = cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
hpp <- mutate(hpp,gaze.amp.bins.10 = cut(abs(gaze.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
#remove NA bins and extra blocks
hpp %>%
filter(!is.na(amp.bins.15))->
hpp
hpp %>%
mutate(blocknum= as.factor(blocknum),
block= as.factor(block),
subject=as.factor(subject))->
dataset
#antisaccade success rate
dataset %>%
group_by(subject,block) %>%
summarize(total=n(),
nAnti=sum(anti_saccade),
percent_anti=nAnti/total)->
assuc
head(assuc)
write.csv(assuc,'AntiSaccadeSuccessRate.csv')
dataset %>%
group_by(subject,block) %>%
summarize(total=n(),
nAnti=sum(anti_saccade),
percent_anti=nAnti/total)->
assuc
kable(assuc)
library(plotly)
library(ggplot2)
library(dplyr)
library(stringr)
library(ggpubr)
library(knitr)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
dataset %>%
group_by(subject,block) %>%
summarize(total=n(),
nAnti=sum(anti_saccade),
percent_anti=nAnti/total)->
assuc
kable(assuc)
dataset %>%
group_by(subject,block) %>%
summarize(total=n(),
nAnti=sum(anti_saccade),
percent_anti=nAnti/total)->
assuc
kable(assuc,digits=2)
ggplot(assuc)+
geom_point(aes(block,percent_anti),size=2)
ggplot(assuc)+
geom_bar(aes(block,percent_anti),size=2)
ggplot(assuc)+
geom_bar(aes(block,percent_anti),size=2,stat='identity')
ggplot(assuc)+
geom_bar(aes(block,percent_anti,color=subject),size=2,stat='identity')
ggplot(assuc)+
geom_bar(aes(block,percent_anti,fill=subject,color=blocknum),size=2,stat='identity')
ggplot(assuc)+
geom_bar(aes(block,percent_anti,fill=subject),size=2,stat='identity')
ggplot(assuc)+
geom_bar(aes(block,percent_anti,fill=subject),size=2,stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(assuc)+
geom_bar(aes(block,percent_anti,fill=subject),size=2,stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab('Anti-saccade Sucess Rate')
ggplot(assuc)+
geom_bar(aes(block,total,fill=subject),size=2,stat='identity')+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab('Total Number of Accepted Trials')
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
dataset %>%
group_by(block) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
dataset %>%
group_by(block,amp.bins.15) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
kable(blockmeasurements)
qplot(gaze.gain,data=dataset)
dataset %>%
group_by(block,anti_saccade,amp.bins.15) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
kable(blockmeasurements)
dataset %>%
filter(anti_saccade) %>%
group_by(block,anti_saccade,amp.bins.15) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
kable(blockmeasurements)
dataset %>%
filter(!anti_saccade) %>%
group_by(block,anti_saccade,amp.bins.15) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
kable(blockmeasurements)
?kruskal.test
getstats<- function(d,form){
nblocks<-length(unique(d$blocknum))
p.gv=-10
p.latency= 10
p.dur = -10
p.gain = -10
p.steps = -10
if (nblocks == 2){
p.gv=wilcox.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= wilcox.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = wilcox.test(gaze.dur ~ blocknum,data=d)$p.value
p.gain = wilcox.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = wilcox.test(gaze.steps ~ blocknum,data=d)$p.value
}
if (nblocks > 2){
p.gv=kruskal.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= kruskal.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = kruskal.test(gaze.dur.ms ~ blocknum,data=d)$p.value
p.gain = kruskal.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = kruskal.test(gaze.steps ~ blocknum,data=d)$p.value
}
# return(list(p.gv,p.latency,p.dur,p.gain,p.steps))
l<-list(p.gv,p.latency,p.dur,p.gain,p.steps)
l[is.na(l)]<- 10
l<- as.data.frame(l)
names(l) <- c('p.gv','p.latency','p.dur','p.gain','p.steps')
l
}
dataset %>%
filter(anti_saccade) %>%
group_by(block,amp.bins.15) %>%
do(getstats(.))->
pvals
kable(pvals,digits=3)
dataset %>%
filter(anti_saccade) %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.))->
pvals
kable(pvals,digits=3)
getstats<- function(d,form){
nblocks<-length(unique(d$blocknum))
p.gv= -10
p.latency= -10
p.dur = -10
p.gain = -10
p.steps = -10
if (nblocks == 2){
p.gv=wilcox.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= wilcox.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = wilcox.test(gaze.dur ~ blocknum,data=d)$p.value
p.gain = wilcox.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = wilcox.test(gaze.steps ~ blocknum,data=d)$p.value
}
if (nblocks > 2){
p.gv=kruskal.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= kruskal.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = kruskal.test(gaze.dur.ms ~ blocknum,data=d)$p.value
p.gain = kruskal.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = kruskal.test(gaze.steps ~ blocknum,data=d)$p.value
}
# return(list(p.gv,p.latency,p.dur,p.gain,p.steps))
l<-list(p.gv,p.latency,p.dur,p.gain,p.steps)
l[is.na(l)]<- 10
l<- as.data.frame(l)
names(l) <- c('p.gv','p.latency','p.dur','p.gain','p.steps')
l
}
dataset %>%
filter(anti_saccade) %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.))->
pvals
kable(pvals,digits=3)
kable(pvals,digits=6)
dataset %>%
filter(anti_saccade) %>%
group_by(block,anti_saccade,amp.bins.15) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
kable(blockmeasurements,digits=3)
dataset %>%
filter(anti_saccade) %>%
group_by(block,anti_saccade,amp.bins.15) %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) ->
blockmeasurements
kable(blockmeasurements,digits=2)
pvals %>%
filter(p.gv<0.05|p.latency<0.05|p.dur<0.05|p.gain<0.05|p.steps<0.05) %>%
kable(digits=6)
pvals %>%
filter(p.gv<0.05|p.latency<0.05|p.dur<0.05|p.gain<0.05|p.steps<0.05,
p.gv>-10) %>%
kable(digits=6)
