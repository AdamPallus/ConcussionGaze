# check for new cells
if (!is.null(referencefile)){
files<-files[!names %in% referencefile$neuron] #comparison
}
nfiles<-length(files)
if (nfiles>0){
message(c('New Files: ',files))
loadedfiles <- lapply(paste(path,files,sep=''),read.csv,sep='\t',header=FALSE)
t<-data.frame()
temp<- NULL
# t.old<-NULL
for (i in 1:nfiles) {
f<- files[i]
message(paste('Loading:',f))
# temp[[i]]=loadedfiles[[i]]
# names<-str_match(f,"(^[a-zA-Z]+)-([0-9]+)")
# loadedfiles[[i]]$block<-names[1]
# loadedfiles[[i]]$subject<-names[2]
# loadedfiles[[i]]$blocknum<-as.numeric(names[3])
#updated for 2-25-2018
#remove extra rows
loadedfiles[[i]]<- select(loadedfiles[[i]],1:9)
#files are named with Subject ID bU07 and block ST1 with ST standing for Saccade Task
names<-str_match(f,"(^[a-zA-Z0-9]{4})([a-zA-Z0-9]{3})")
loadedfiles[[i]]$block<-names[1]
loadedfiles[[i]]$subject<-names[2]
loadedfiles[[i]]$blocknum<-as.numeric(str_sub(names[3],3))
task<-str_sub(names[3],1,2)
loadedfiles[[i]]$task<- task
if (task=='AS'){ #antisaccade dask needs target data fixed
#'There are three targets in the anti saccade files
#'but only the second is useful. The central fixation is always at zero
targ<- loadedfiles[[i]]$V8
targ<- replace(targ,targ< -80,0)
loadedfiles[[i]]$V8=targ
}
}
t <-rbindlist(loadedfiles,fill = TRUE)
# t<- dplyr::select(t, -thp,-tvp,-time)
}else{
message('********NO NEW DATA********')
t<-NULL
}
return(t)
}
t<-loadnewheadfree()
names(t)
qplot(V7,V9,data=filter(t,V7<200))
source('~/GitHub/ConcussionGaze/knighthelperfunctions.R', echo=TRUE)
library(ggplot2)
library(dplyr)
library(broom)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
h<- select(h,1:11)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
library(ggplot2)
library(dplyr)
library(broom)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
h<- select(h,1:12)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','Targ2','block','subject','blocknum','task')
head(h)
library(ggplot2)
library(dplyr)
library(broom)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','Targ2','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(subject,block,trialnum) %>%
do(measureTrial(.))->
hm
#load the measured data. See previous report for this process.
# hm <- readRDS('knightMeasuredDemo2018.RDS')
#Based on the previous report, I'm rejecting trials with 20 or more interpolated data points during the detected primary gaze shift, and trials where the latency is too short or too long. These ranges can be adjusted if future investigation warrants.
hm %>%
mutate(gaze.onset.ms=(gaze.onset-200)/samplerate) %>%
filter(missing.gs<20,
gaze.onset.ms>150,
gaze.onset.ms<500) %>%
ungroup()->
hpp
hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80)))
hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,20,40,60,80)))
ggplot(filter(hpp,!is.na(amp.bins.combined)))+
geom_boxplot(aes(amp.bins.combined,abs(peak.gaze.velocity),fill=block))+
ylab('Peak gaze shift velocity (deg/s)')+
xlab('Target amplitude bins combined left and right (deg)')+
theme_minimal()+
ggtitle('comparison of pre and post peak gaze velocity')+
facet_wrap(~subject,ncol=1)
#
# ggplot(hpp,aes(abs(target.amp),abs(peak.gaze.velocity),color=block))+
#   geom_point()+
#   stat_smooth(method='lm')+
#   ylab('Peak gaze shift velocity (deg/s)')+
#   xlab('Target Amplitude (deg)')+
#   theme_minimal()+
#   ggtitle('comparison of pre and post peak gaze velocity')+
#   facet_wrap(~subject,ncol=1)
saveRDS(hm,'AntiSaccadeTest.RDS')
head(hm)
names(hm)
names(t)
names(hm)
nrow(hm)
nrow(t)
names(h)
hh<-left_join(hh,hm,by='time')
names(hh)
hh<-left_join(h,hm,by='time')
names(hm)
hh<-left_join(h,hm,by='trialnum')
head(hh)
saveRDS(hh,'AntiSaccadeTest.RDS')
names(hh)
#For plotting raw data:
hh<- left_join(h,hm)
names(hh)
saveRDS(hh,'AntiSaccadeTest.RDS')
unique(hh$block)
qplot(hm$IGP)
hm$task
source('~/GitHub/ConcussionGaze/knighthelperfunctions.R', echo=TRUE)
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(subject,block,trialnum) %>%
do(measureTrial(.))->
hm
source('~/GitHub/ConcussionGaze/knighthelperfunctions.R', echo=TRUE)
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(subject,block,trialnum) %>%
do(measureTrial(.))->
hm
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','Targ2','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
head(hm)
hm %>%
mutate(recenter=(task==AS & abs(IGP)>10)) %>%
filter(!recenter) ->
hmas
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) ->
hmas
nrow(hm)
nrow(hmas)
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
#For plotting raw data:
hh<- left_join(h,hm)
saveRDS(hh,'AntiSaccadeTest.RDS')
head(hm)
hm$IGP[1:10]
unique(hm$trialnum)
unique(hh$trialnum)
#For plotting raw data:
hh<- left_join(h,hm)
unique(hh$trialnum)
#For plotting raw data:
hh<- right_join(h,hm)
unique(hh$trialnum)
saveRDS(hh,'AntiSaccadeTest.RDS')
library(ggplot2)
library(dplyr)
library(broom)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','Targ2','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
#load the measured data. See previous report for this process.
# hm <- readRDS('knightMeasuredDemo2018.RDS')
#For plotting raw data:
# hh<- left_join(h,hm)
# saveRDS(hh,'AntiSaccadeTest.RDS')
unique(h$trialnum)
unique(hm$trialnum)
#For plotting raw data:
hh<- left_join(h,hm)
unique(hh$trialnum)
hf<- filter(hh,trialnum %in% unique(hm$trialnum))
unique(hf$trialnum)
nrow(hf)
nrow(hm)
nrow(hh)
hh<- filter(hh,trialnum %in% unique(hm$trialnum))
saveRDS(hh,'AntiSaccadeTest.RDS')
library(ggpubr)
install.packages('ggpubr')
library(ggpubr)
library(ggplot2)
library(mgcv)
library(plotly)
library(ggpubr)
# hm <- readRDS('dashboardData3-3-2018.RDS')
hm <- readRDS('dashboardData2018-03-19.RDS')
samplerate<- 304.7508/1000
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
library(ggplot2)
library(dplyr)
library(broom)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
# path<- "F:/dropbox/kdata/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree()
h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','Targ2','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
hm %>%
mutate(gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<500,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
names(hm)
hm$blocknum=1
hm %>%
mutate(gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<500,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
hpp <- mutate(hpp,amp.bins.15 = cut(abs(target.amp),breaks=c(0,15,30,45,60,75,90)))
#remove NA bins and extra blocks
hpp %>%
filter(!is.na(amp.bins.15))->
hpp
hpp %>%
mutate(blocknum= as.factor(blocknum),
block= as.factor(block),
subject=as.factor(subject))->
dataset
plot.vel<-ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
plot.vel
dataset2<-bind_cols(dataset,mutate(dataset,blocknum=2),mutate(dataset,blocknum=3))
plot.vel<-ggboxplot(dataset2, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
plot.vel
head(dataset2)
d2<- dataset
d3<-dataset
d2$blocknum=2
d3$blocknum3
d3$blocknum=3
dataset<-bind_cols(dataset,d2,d3)
unique(dataset$blocknum)
nrow(d2)
nrow(dataset)
unique(d2$blocknum)
d1<- d2
d1$blocknum=1
dataset<-bind_rows(d1,d2,d3)
nrow(dataset)
plot.vel<-ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
unique(dataset$blocknum)
plot.vel
plot.vel+stat_compare_means(comparisons = list(c(1,2),c(1,3),c(2,3)))
plot.vel+stat_compare_means(comparisons = list(c(1,2),c(1,3),c(2,3)),paired=TRUE)
plot.vel+stat_compare_means(comparisons = list(c(1,2),c(1,3),c(2,3)),ref.group=1)
plot.vel+stat_compare_means(ref.group=1)
plot.vel+stat_compare_means(ref.group=1,"p.signif")
plot.vel+stat_compare_means(ref.group=1,method = "p.signif")
#####Multiple Comparisons----
gboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif",ref.group = 1)+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
#####Multiple Comparisons----
ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif",ref.group = 1)+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
#####Multiple Comparisons----
ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif",ref.group = c(1,2))+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
?wilcox.test
stat_compare_means((+)
#####Multiple Comparisons----
ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means()+
# stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')
?dunn.test
install.packages('dunn.test')
dunn.test(abs(peak.gaze.velocity) ~ blocknum,data=dataset)
library(dunn.test)
dunn.test(abs(peak.gaze.velocity) ~ blocknum,data=dataset)
?dunn.test
install.package(FSA)
install.packages('FSA')
libray(FSA)
library(FSA)
dunnTest(abs(peak.gaze.velocity) ~ blocknum,data=dataset)
dunnTest(abs(peak.gaze.velocity) ~ as.factor(blocknum),data=dataset)
?p.adjust
