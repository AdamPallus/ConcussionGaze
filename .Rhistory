ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,Hv/10),color='blue',linetype=2)+
geom_line(aes(time,H),color='blue')+
geom_line(aes(time,cumsum(Hv*1)/samplerate/1000),color='gray50')+
geom_line(aes(time,cumsum(Hv*1.29)/samplerate/1000),color='orange')+
geom_hline(yintercept = c(-60,60)))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,Hv/10),color='blue',linetype=2,label='Head Velocity')+
geom_line(aes(time,H),color='blue')+
geom_line(aes(time,cumsum(Hv*1)/samplerate/1000),color='gray50')+
geom_line(aes(time,cumsum(Hv*1.29)/samplerate/1000),color='orange')+
geom_hline(yintercept = c(-60,60))+
ylab('Head Position (deg)'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,Hv/10,label='Head Velocity'),color='blue',linetype=2)+
geom_line(aes(time,H),color='blue')+
geom_line(aes(time,cumsum(Hv*1)/samplerate/1000),color='gray50')+
geom_line(aes(time,cumsum(Hv*1.29)/samplerate/1000),color='orange')+
geom_hline(yintercept = c(-60,60))+
ylab('Head Position (deg)'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,Hv/10,label='Head Velocity'),color='blue',linetype=2)+
geom_line(aes(time,H,label='Original Head Position'),color='blue')+
geom_line(aes(time,Caclulated_head_velocity=cumsum(Hv*1)/samplerate/1000),color='gray50')+
geom_line(aes(time,cumsum(Hv*1.29)/samplerate/1000),color='orange')+
geom_hline(yintercept = c(-60,60))+
ylab('Head Position (deg)'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,Hv/10,label='Head Velocity'),color='blue',linetype=2)+
geom_line(aes(time,H,label='Original Head Position'),color='blue')+
geom_line(aes(time,cumsum(Hv*1)/samplerate/1000,label='Original Recalc'),color='gray50')+
geom_line(aes(time,cumsum(Hv*1.29)/samplerate/1000,label='Increased Gain'),color='orange')+
geom_hline(yintercept = c(-60,60))+
ylab('Head Position (deg)'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,Hv/10,label='Head Velocity'),color='blue',linetype=2)+
geom_line(aes(time,H,label='Original Head Position'),color='blue')+
geom_line(aes(time,cumsum(Hv*1)/samplerate/1000,label='Recalculated Head Position'),color='orange')+
geom_hline(yintercept = c(-60,60))+
ylab('Head Position (deg)'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,G))+
geom_hline(yintercept = c(-60,60))+
ylab('Gaze Position (deg)'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,G),color='darkgreen')+
geom_line(aes(time,H),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)'))
geom_line(aes(time,cumsum(Hv)/samplerate/1000),color='blue')+
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,cumsum(Gv)/samplerate/1000),color='darkgreen')+
geom_line(aes(time,cumsum(Hv)/samplerate/1000),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity'))
ggplotly(
h %>%
mutate(Hvcalc=cumsum(Hv)/samplerate/1000,
Gvcalc=Hvcalc+E) %>%
filter(time>50,time<13000) %>%
ggplot()+
geom_line(aes(time,cumsum(Gv)/samplerate/1000),color='darkgreen')+
geom_line(aes(time,),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity'))
ggplotly(
h %>%
mutate(Hvcalc=cumsum(Hv)/samplerate/1000,
Gvcalc=Hvcalc+E) %>%
filter(time>50,time<13000) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity'))
ggplotly(
h %>%
filter(time>50,time<13000) %>%
mutate(Hvcalc=cumsum(Hv)/samplerate/1000,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity'))
ggplotly(ggplot(filter(h,time>50,time<13000))+
geom_line(aes(time,G),color='darkgreen')+
geom_line(aes(time,H),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('The Reported Positions'))
ggplotly(
h %>%
filter(time>50,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.2)/samplerate/1000,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.2)/samplerate/1000,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.2)/samplerate/1000+2.5,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.15)/samplerate/1000+2.5,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.13)/samplerate/1000+2.5,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1)/samplerate/1000+2.5,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
60/53
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1)/samplerate/1000+3,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
60/53.5
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.121)/samplerate/1000+3,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.2'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.121)/samplerate/1000+3,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.121/nAnd offset 3 deg right'))
ggplotly(
h %>%
filter(time>500,time<13000) %>%
mutate(Hvcalc=cumsum(Hv*1.121)/samplerate/1000+3,
Gvcalc=Hvcalc+E) %>%
ggplot()+
geom_line(aes(time,Gvcalc),color='darkgreen')+
geom_line(aes(time,Hvcalc),color='blue')+
geom_hline(yintercept = c(-60,60))+
ylab('Position (deg)')+
ggtitle('Positions calculated from Velocity with Head Gain 1.121 and offset 3 deg right'))
h<- filter(h,time<13000)
saveRDS('calibrationtestdata2.RDS')
saveRDS(h,'calibrationtestdata2.RDS')
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree(path=path)
path<- "F:/dropbox/kdata/anti/"
path<- "F:/dropbox/kdata/test/"
# h<- loadnewheadfree(NULL,path)
h<-loadnewheadfree(path=path)
# h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
#adjust
h<-loadnewheadfree(path=path)
path
h<-loadnewheadfree(path="C:\\Users\\setup\\Dropbox\\kdata\\test\\")
# h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(E,Hv,Targ,block,subject,task)%>%
filter(time>50) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h%>%
select(E,HV,Targ,block,subject,task)%>%
filter(time>50) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
rename(Hv=HV) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h%>%
select(E,HV,Targ,block,subject,task)%>%
mutate(time=row_number()) %>%
filter(time>50) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
rename(Hv=HV) %>%
mutate(Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h%>%
select(E,HV,Targ,block,subject,task)%>%
mutate(time=row_number()) %>%
rename(Hv=HV) %>%
filter(time>50) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#Force antisaccade gaze to be on target...
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
saveRDS(hm,'testAS.RDS')
names(hm)
h<-loadnewheadfree(path="C:\\Users\\setup\\Dropbox\\kdata\\test\\")
# h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(E,HV,Targ,block,blocknum,subject,task)%>%
mutate(time=row_number()) %>%
rename(Hv=HV) %>%
filter(time>50) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#Force antisaccade gaze to be on target...
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
#Force antisaccade gaze to be on target...
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
h<-loadnewheadfree(path="C:\\Users\\setup\\Dropbox\\kdata\\test\\")
# h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(E,HV,Targ,block,blocknum,subject,task)%>%
mutate(time=row_number()) %>%
rename(Hv=HV) %>%
filter(time>50) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#Force antisaccade gaze to be on target...
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
h<-loadnewheadfree(path="C:\\Users\\setup\\Dropbox\\kdata\\test\\")
# h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(E,HV,Targ,block,blocknum,subject,task)%>%
mutate(time=row_number()) %>%
rename(Hv=HV) %>%
filter(time>50) %>%
mutate(time=row_number()) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#Force antisaccade gaze to be on target...
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
names(h)
saveRDS(hm,'testAS.RDS')
names(hm)
h<-loadnewheadfree(path="C:\\Users\\setup\\Dropbox\\kdata\\test\\")
# h<- select(h,1:13)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(E,HV,Targ,block,blocknum,subject,task)%>%
mutate(time=row_number()) %>%
rename(Hv=HV) %>%
filter(time>50) %>%
mutate(time=row_number()) %>%
mutate(H=cumsum(Hv*1.121)/samplerate/1000+3,
G=H+E) %>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
# Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
#Force antisaccade gaze to be on target...
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
saveRDS(hm,'testAS.RDS')
names(hm)
hm<-NULL
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
head(hm)
names(hm)
h$blocknum
hm$blocknum
hm$blocknum=3
saveRDS(hm,'testAS.RDS'')
saveRDS(hm,'testAS.RDS')
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,blocknum,trialnum) %>%
do(measureTrial(.))->
hm
names(hm)
saveRDS(hm,'testAS.RDS')
install.packages("flexdashboard")
install.packages("flexdashboard")
devtools::install_github('rstudio/rmarkdown')
library(devtools)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages('devtools')
devtools::install_github('rstudio/rmarkdown')
devtools::install_github('rstudio/rmarkdown')
brew remove pandoc
remove.packages('pandoc')
remove.packages('Pandoc')
