amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=5,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
library(ggpubr)
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dataset,
amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=5,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
####Multiple Comparisons----
dataset %>%
filter(subject=='xL16',as.numeric(blocknum)>2,amp.bins.15=='(30,45]') %>%
ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "npg",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label.y=700)+
stat_compare_means(comparisons = list(c('5','6'),c('5','7'),c('6','7')))+
# stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')+
theme(legend.position = 'none')
####Multiple Comparisons----
dataset %>%
filter(subject=='xL16',as.numeric(blocknum)>2,amp.bins.15=='(30,45]') %>%
ggboxplot(dataset, x = "blocknum", y='abs(peak.gaze.velocity)',
color = "blocknum", palette = "npg",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label.y=700)+
stat_compare_means(comparisons = list(c('5','6'),c('5','7'),c('6','7')))+
# stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze peak velocity (deg/s)')+
theme(legend.position = 'none')
toPlot<-filter(dataset,
as.numeric(blocknum)>2,
amp.bins.15=='(30,45]',
subject==subjects[i])
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dataset,
as.numeric(blocknum)>2,
amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=5,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
dataset %>%
filter(subject %in% subjects) %>%
mutate(blocknum=as.numeric(blocknum)) %>%
filter(blocknum>2) %>%
mutate(blocknum=blocknum-4)->
dolivia
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
as.numeric(blocknum)>2,
amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=5,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
unique(dolivia$block)
unique(dolivia$blocknum)
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=5,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
# amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=5,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
plot(1:10)
dir.off()
dev.off()
plot(1:10)
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
# amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=15,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
def.off(_
def.off()
dev.off()
# hm <- readRDS('dashboardData3-3-2018.RDS')
hm <- readRDS('dashboardData2018-03-19.RDS')
samplerate<- 304.7508/1000
hm %>%
mutate(gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<500,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
hpp <- mutate(hpp,amp.bins.20 = cut(abs(target.amp),breaks=c(0,20,40,60,80)))
hpp <- mutate(hpp,amp.bins.15 = cut(abs(target.amp),breaks=c(0,15,30,45,60,75,90)))
hpp <- mutate(hpp,amp.bins.10 = cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
hpp <- mutate(hpp,gaze.amp.bins.10 = cut(abs(gaze.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
#remove NA bins and extra blocks
hpp %>%
filter(!is.na(amp.bins.15))->
hpp
hpp %>%
mutate(blocknum= as.factor(blocknum),
block= as.factor(block),
subject=as.factor(subject))->
dataset
dataset %>%
filter(subject %in% subjects) %>%
mutate(blocknum=as.numeric(blocknum)) %>%
filter(blocknum>2) %>%
mutate(blocknum=blocknum-4)->
dolivia
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
# amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=15,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
dataset %>%
filter(subject %in% subjects,
gaze.gain>0) %>%
mutate(blocknum=as.numeric(blocknum)) %>%
filter(blocknum>2) %>%
mutate(blocknum=blocknum-4)->
dolivia
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
# amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=15,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
ylabspot<- c(700,50,650,650,3,3)
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
# amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=15,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
for (i in seq_along(subjects)){
fn<- paste0(filenames,subjects[i],'.pdf')
toPlot<-filter(dolivia,
# amp.bins.15=='(30,45]',
subject==subjects[i])
for (j in seq_along(fn)){
saveXL(toPlot,fn[j],widt=15,height=5,
y=yvars[j],ylabel=ylabs[j],
ylabspot=ylabspot[j])
}
}
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(ggplot2)
library(mgcv)
library(plotly)
library(ggpubr)
# dataset <- diamonds
# dataset <- readRDS('KnightData3-2-2018.RDS')
# dataset <- readRDS('KnightBoxplotData3-2-2018.RDS')
# hm <- readRDS('dashboardData3-3-2018.RDS')
hm <- readRDS('dashboardData2018-03-19.RDS')
samplerate<- 304.7508/1000
hm %>%
mutate(gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<500,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
# hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80)))
hpp <- mutate(hpp,amp.bins.20 = cut(abs(target.amp),breaks=c(0,20,40,60,80)))
hpp <- mutate(hpp,amp.bins.15 = cut(abs(target.amp),breaks=c(0,15,30,45,60,75,90)))
hpp <- mutate(hpp,amp.bins.10 = cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
hpp <- mutate(hpp,gaze.amp.bins.10 = cut(abs(gaze.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
#remove NA bins and extra blocks
hpp %>%
filter(!is.na(amp.bins.15))->
hpp
hpp %>%
mutate(blocknum= as.factor(blocknum),
block= as.factor(block),
subject=as.factor(subject))->
dataset
goodsubjects<-c('Cj21','Fq58','wR49','CP48','VO35','xL16')
getstats<- function(d,form){
nblocks<-length(unique(d$blocknum))
p.gv=-10
p.latency= 10
p.dur = -10
p.gain = -10
p.steps = -10
if (nblocks == 2){
p.gv=wilcox.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= wilcox.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = wilcox.test(gaze.dur ~ blocknum,data=d)$p.value
p.gain = wilcox.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = wilcox.test(gaze.steps ~ blocknum,data=d)$p.value
}
if (nblocks > 2){
p.gv=kruskal.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= kruskal.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = kruskal.test(gaze.dur.ms ~ blocknum,data=d)$p.value
p.gain = kruskal.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = kruskal.test(gaze.steps ~ blocknum,data=d)$p.value
}
# return(list(p.gv,p.latency,p.dur,p.gain,p.steps))
l<-list(p.gv,p.latency,p.dur,p.gain,p.steps)
l[is.na(l)]<- 10
l<- as.data.frame(l)
names(l) <- c('p.gv','p.latency','p.dur','p.gain','p.steps')
d %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median.gv=median(abs(peak.gaze.velocity)),
median.latency=median(gaze.onset.ms),
median.dur=median(gaze.dur.ms),
median.gain=median(gaze.gain),
median.steps=median(gaze.steps),
sd.gv=sd(abs(peak.gaze.velocity)),
sd.latency=sd(gaze.onset.ms),
sd.dur=sd(gaze.dur.ms),
sd.gain=sd(gaze.gain),
sd.steps=sd(gaze.steps),
n=n()) %>%
bind_cols(l)->
l
return(l)
}
dataset %>%
filter(subject %in% goodsubjects) %>%
group_by(subject,blocknum,amp.bins.15) %>%
tally() ->
dt
dt %>%
spread(amp.bins.15,n)->
dtable
dataset %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
stats.table %>%
filter(subject %in% goodsubjects)->
stats.table
library(tidyr)
dataset %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
library(dplyr)
dataset %>%
filter(subject %in% goodsubjects) %>%
group_by(subject,blocknum,amp.bins.15) %>%
tally() ->
dt
dt %>%
spread(amp.bins.15,n)->
dtable
dataset %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
stats.table %>%
filter(subject %in% goodsubjects)->
stats.table
stats.table
getstats<- function(d,form){
nblocks<-length(unique(d$blocknum))
p.gv=-10
p.latency= 10
p.dur = -10
p.gain = -10
p.steps = -10
if (nblocks == 2){
p.gv=wilcox.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= wilcox.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = wilcox.test(gaze.dur ~ blocknum,data=d)$p.value
p.gain = wilcox.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = wilcox.test(gaze.steps ~ blocknum,data=d)$p.value
}
if (nblocks > 2){
p.gv=kruskal.test(abs(peak.gaze.velocity) ~ blocknum,data=d)$p.value
p.latency= kruskal.test(gaze.onset.ms ~ blocknum,data=d)$p.value
p.dur = kruskal.test(gaze.dur.ms ~ blocknum,data=d)$p.value
p.gain = kruskal.test(gaze.gain ~ blocknum,data=d)$p.value
p.steps = kruskal.test(gaze.steps ~ blocknum,data=d)$p.value
}
# return(list(p.gv,p.latency,p.dur,p.gain,p.steps))
l<-list(p.gv,p.latency,p.dur,p.gain,p.steps)
l[is.na(l)]<- 10
l<- as.data.frame(l)
names(l) <- c('p.gv','p.latency','p.dur','p.gain','p.steps')
d %>%
summarize(#mean.gv=mean(abs(peak.gaze.velocity)),
#mean.latency=mean(gaze.onset.ms),
#mean.dur=mean(gaze.dur.ms),
#mean.gain=mean(gaze.gain),
#mean.steps=mean(gaze.steps),
median_gv=median(abs(peak.gaze.velocity)),
median_latency=median(gaze.onset.ms),
median_dur=median(gaze.dur.ms),
median_gain=median(gaze.gain),
median_steps=median(gaze.steps),
sd_gv=sd(abs(peak.gaze.velocity)),
sd_latency=sd(gaze.onset.ms),
sd_dur=sd(gaze.dur.ms),
sd_gain=sd(gaze.gain),
sd_steps=sd(gaze.steps),
n=n()) %>%
bind_cols(l)->
l
return(l)
}
dataset %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
stats.table %>%
filter(subject %in% goodsubjects)->
stats.table
write.csv(stats.table,'Fall2016_stats.csv')
# load data in 'global' chunk so it can be shared by all users of the dashboard
library(ggplot2)
library(mgcv)
library(plotly)
library(ggpubr)
library(stringr)
# dataset <- diamonds
# dataset <- readRDS('KnightData3-2-2018.RDS')
# dataset <- readRDS('KnightBoxplotData3-2-2018.RDS')
# hm <- readRDS('dashboardData3-3-2018.RDS')
# hm <- readRDS('dashboardData2018-03-19.RDS')
# hm <- readRDS('antisaccadeDashboard2018-3-29.RDS')
hm <- readRDS('antisaccadeDashboard2018-4-07.RDS')
samplerate<- 304.7508/1000
hm %>%
mutate(blocknum=as.factor(str_sub(block,7)),
gaze.onset.ms=(gaze.onset-200)/samplerate,
head.onset.ms=(head.onset-200)/samplerate,
gaze.dur.ms=(gaze.dur)/samplerate,
IEPr=IEP*sign(gaze.amp),
gaze.gain=gaze.amp/target.amp,
anti_saccade=(gaze.amp*target.amp)<0) %>%
filter(missing.gs<15,
gaze.onset.ms>150,
gaze.onset.ms<500,
abs(peak.gaze.velocity) > 200) %>%
ungroup() %>%
select(peak.gaze.velocity,
gaze.onset.ms,
head.onset.ms,
gaze.dur.ms,
gaze.gain,
anti_saccade,
peak.head.velocity,
head.contribution,
gaze.amp,
gaze.dur,
subject,
block,
blocknum,
trialnum,
target.amp,
head.amp,
IEPr,
gaze.steps,
total.gaze.amp,
total.gaze.dur,
total.head.contribution)->
hpp
# hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80)))
hpp <- mutate(hpp,amp.bins.20 = cut(abs(target.amp),breaks=c(0,20,40,60,80)))
hpp <- mutate(hpp,amp.bins.15 = cut(abs(target.amp),breaks=c(0,15,30,45,60,75,90)))
hpp <- mutate(hpp,amp.bins.10 = cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
hpp <- mutate(hpp,gaze.amp.bins.10 = cut(abs(gaze.amp),breaks=c(0,10,20,30,40,50,60,70,80,90)))
#remove NA bins and extra blocks
hpp %>%
filter(!is.na(amp.bins.15))->
hpp
hpp %>%
mutate(blocknum= as.factor(blocknum),
block= as.factor(block),
subject=as.factor(subject))->
dataset
dataset %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
stats.table %>%
filter(subject %in% goodsubjects)->
stats.table
write.csv(stats.table,'AntisaccadeSummaryTable.csv')
unique(dataset$subject)
dataset %>%
group_by(subject,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
write.csv(stats.table,'AntisaccadeSummaryTable.csv')
names(dataset)
unique(dataset$anti_saccade)
#ANTISACCADE FOR KAIA
dataset %>%
# filter(anti_saccade) %>%
group_by(subject,anti_saccade,amp.bins.15) %>%
do(getstats(.)) ->
stats.table
write.csv(stats.table,'AntisaccadeSummaryTable.csv')
write.csv(stats.table,'AntisaccadeSummaryTable.csv')
