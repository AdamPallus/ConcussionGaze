ylab('Gaze latency (ms)')
plot.dur<-ggboxplot(dataset, x = "blocknum", y='gaze.dur.ms',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze duration (ms)')
plot.gain<-ggboxplot(dataset, x = "blocknum", y='gaze.gain',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze gain')
plot.gain2<-ggboxplot(filter(dataset,gaze.gain>0.3), x = "blocknum", y='gaze.gain',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze gain')
plot.steps<-ggboxplot(dataset, x = "blocknum", y='gaze.steps',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze number of steps')
plot.vel
plot.gain
plot.dur
plot.steps
plot.latency
plot.hcont<-ggboxplot(dataset, x = "blocknum", y='head.contribution',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Gaze number of steps')
plot.hcont
plot.hcont<-ggboxplot(dataset, x = "blocknum", y='abs(head.contribution)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Head Contribution')
plot.hcont
plot.hcont<-ggboxplot(dataset, x = "blocknum", y='abs(head.amp)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Head Contribution')
plot.hamp<-ggboxplot(dataset, x = "blocknum", y='abs(head.amp)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Head Contribution')
plot.hcont<-ggboxplot(dataset, x = "blocknum", y='abs(head.contribution)',
color = "blocknum", palette = "jco",
add = "jitter",
# facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE)
facet.by = c("subject","amp.bins.15"), short.panel.labs = TRUE) +
stat_compare_means(label = "p.signif")+
xlab('Time point')+
ylab('Head Contribution')
plot.hamp
ggplot(dataset) +
geom_point(aes(targ.amp,gaze.amp,color=blocknum))
names(dataset)
ggplot(dataset) +
geom_point(aes(target.amp,gaze.amp,color=blocknum))
ggplot(dataset,aes(target.amp,gaze.amp,color=blocknum)) +
geom_point()+
stat_smooth(method='lm')
ggplot(dataset,aes(target.amp,gaze.amp,color=blocknum)) +
geom_point()+
stat_smooth(method='lm')+
geom_abline()
ggplot(dataset,aes(target.amp,total.gaze.amp,color=blocknum)) +
geom_point()+
stat_smooth(method='lm')+
geom_abline()
qplot(gaze.amp,total.gaze.amp,data=dataset)
qplot(gaze.amp,total.gaze.amp,data=dataset)+geom_abline()
min(h$counter)
max(h$counter)
head(hm)
tt
tt<- filter(h,blocknum=='1',trialnum=1)
tt<- filter(h,blocknum=='1',trialnum==1)
tt<- filter(h,block='CP48ST1',trialnum==1)
tt<- filter(h,block=='CP48ST1',trialnum==1)
buffer
buffer=200
trial.length<- nrow(tt)
trial.length
counter<-1:trial.length
#identify the id number of the first saccade that satisfies the criteria
firstshift=min(tt$gazeshifts[buffer:trial.length],na.rm=T)
firstshift
qplot(time,G,data=tt)
unique(tt$gazeshifts)
is.infinite(firstshift)
length(unique(tt$gazeshifts))
tt %>%
filter(!is.na(gazeshifts)) %>%
group_by(gazeshifts) %>%
summarize(start.time=first(time),
stop.time=last(time),
peak.gaze.velocity=max(Gv)) %>%
mutate(interval= start.time-lag(stop.time)) %>%
filter(interval<47, peak.gaze.velocity>200) -> #reject saccades that are separated by too much time (47 samples ~ 150 ms)
isi
isi
good.saccades<- c(firstshift, isi$gazeshifts)
good.saccades
#delete them from the marking
good.gazeshifts=replace(tt$gazeshifts,!tt$gazeshifts %in% good.saccades,NA)
good.gazeshifts
#measure gaze
fixation.velocity=mean(tt$Gv[buffer-100:buffer])
fixation.velocity
qplot(time,Graw,data=tt)
qplot(time,G,data=tt)
qplot(time,E,data=tt)
qplot(time,H,data=tt)
gaze.onset=max(first(tt$counter[good.gazeshifts==firstshift&!is.na(good.gazeshifts)]),1)
gaze.onset
qplot(time,G,data=tt)
qplot(counter,G,data=tt)
G[counter==315]
tt$G[counter==315]
tt$G[315]
gaze.offset=last(tt$counter[good.gazeshifts==firstshift&!is.na(good.gazeshifts)])
gaze.offset
qplot(counter,G,data=tt)
qplot(counter,G,data=tt)+geom_vline(xintercept = c(315,354))
gaze.dur=gaze.offset-gaze.onset
gaze.amp=tt$G[gaze.offset]-tt$G[gaze.onset]
gaze.amp
total.gaze.offset=max(tt$counter[!is.na(good.gazeshifts)])
gaze.offset
total.gaze.offset
length(isi$gazeshifts)
tt %>%
filter(!is.na(gazeshifts)) %>%
group_by(gazeshifts) %>%
summarize(start.time=first(time),
stop.time=last(time),
peak.gaze.velocity=max(Gv)) %>%
mutate(interval= start.time-lag(stop.time)) %>%
#reject saccades that are separated by too much time (47 samples ~ 150 ms)
#reject saccades with peak velocity<200 because they're catch-up saccades
filter(interval<47) ->
isi
isi
tt %>%
filter(!is.na(gazeshifts)) %>%
group_by(gazeshifts) %>%
summarize(start.time=first(time),
stop.time=last(time),
peak.gaze.velocity=max(Gv)) %>%
mutate(interval= start.time-lag(stop.time)) %>%
#reject saccades that are separated by too much time (47 samples ~ 150 ms)
#reject saccades with peak velocity<200 because they're catch-up saccades
filter(interval<4700) ->
isi
isi
qplot(time,G,data=tt)
qplot(time,G,data=tt)+geom_vline(xintercept = 12303)
lm(counter ~ GV,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20)))
lm(counter ~ Gv,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20)))
coef(lm(counter ~ Gv,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))[['Gv']]
coef(lm(counter ~ Gv,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))[['Gv']]*1000
qplot(time,Gv,data=tt)
coef(lm(counter ~ Gv,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))[['Gv']]*1000/samplerate
qplot(time,Gv,data=tt)+geom_abline(slope=0.0037,intercept = 366)
qplot(time,Gv,data=tt)+geom_abline(slope=3.7,intercept = 366)
qplot(time,Gv,data=tt)+geom_abline(slope=.0037,intercept = 366)
qplot(time,Gv,data=tt)+geom_abline(slope=.0037,intercept = 366)+geom_hline(c(gaze.offset+10,gaze.offset+20))
qplot(time,Gv,data=tt)+geom_abline(slope=.0037,intercept = 366)+geom_vline(xintercept = c(gaze.offset+10,gaze.offset+20))
qplot(counter,Gv,data=tt)+geom_abline(slope=.0037,intercept = 366)+geom_vline(xintercept = c(gaze.offset+10,gaze.offset+20))
qplot(counter,G,data=tt)+geom_abline(slope=.0037,intercept = 366)+geom_vline(xintercept = c(gaze.offset+10,gaze.offset+20))
coef(lm(counter ~ G,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))[['G']]
coef(lm(counter ~ Gv,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))
coef(lm(counter ~ G,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))
qplot(counter,G,data=tt)+geom_abline(slope=.0037,intercept = 366)+geom_vline(xintercept = c(gaze.offset+10,gaze.offset+20))+geom_abline(slope=-1.372,intercept = 438.4)
coef(lm(counter ~ H,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))
coef(lm(counter ~ E,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))
tt$E<- tt$G-tt$H
coef(lm(counter ~ E,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))
coef(lm(counter ~ H,data=filter(tt,counter>(gaze.offset+10),counter<(gaze.offset+20))))
ggplot(tt)+geom_point(aes(counter,G))+geom_point(aes(counter,E))
ggplot(tt)+geom_point(aes(counter,G))+geom_point(aes(counter,E),color='red')
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+geom_point(aes(counter,E),color='red')
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+geom_point(aes(counter,E),color='red')+geom_point(aes(counter,H),color='darkblue')
modE=lm(counter~E,data=filter(tt,counter>gaze.offset,counter<head.offset))
total.gaze.amp=tt$G[tt$total.gaze.offset]-tt$G[gaze.onset]
total.gaze.dur=tt$G[total.gaze.offset]-tt$G[gaze.onset]
peak.gaze.velocity=maxabs(tt$Gv[good.gazeshifts==firstshift])
IHP=tt$H[gaze.onset]
IGP=tt$G[gaze.onset]
IEP=IGP-IHP
IEPr = IEP * sign(gaze.amp) #relative initial eye position
final.EP=tt$E[total.gaze.offset]
head.contribution=tt$H[gaze.offset]-IHP
total.head.contribution=tt$H[total.gaze.offset]-IHP #how much head moved during gaze shifts
#measure head
firsthead=min(tt$headmovement[buffer:trial.length],na.rm=T)
#set up a flag to determine whether we will be measuring head movements
head.onset<-NA
head.offset<-NA
peak.head.velocity<-NA
head.amp<-NA
if (!is.infinite(firsthead)){
head.onset=first(tt$counter[tt$headmovement==firsthead&!is.na(tt$headmovement)])
head.offset=last(tt$counter[tt$headmovement==firsthead&!is.na(tt$headmovement)])
if (head.onset<total.gaze.offset){ #ignore head movements that start after the gaze shifts are done
peak.head.velocity=maxabs(tt$Hv[tt$headmovement==firsthead])
head.amp=tt$H[head.offset]-tt$H[head.onset]
}
if (head.onset>(gaze.onset+50)){
head.onset=NA
head.offset=NA
peak.head.velocity=NA
head.amp=NA
}
}
modE=lm(counter~E,data=filter(tt,counter>gaze.offset,counter<head.offset))
coef(modE)
modH=lm(counter~H,data=filter(tt,counter>gaze.offset,counter<head.offset))
coef(modH)
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(slope=coef[modE])
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(coef[modE])
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(coef[modE][1],coef[modE[2]])
geom_abline(coef[modE][1],coef[modE[2])
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(coef[modE][1],coef[modE][2])
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(coef(modE)[1],coef(modE)[2])
coef(modE)
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])
ggplot()+
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])+
geom_abline(intercept = coef(modH)[1],slope=coef(modH)[2])
modH
coef(modH)[2]/coef(modE)[2]
ggplot(tt)+geom_point(aes(counter-200,G),color='darkgreen')+
geom_point(aes(counter-200,E),color='red')+
geom_point(aes(counter-200,H),color='darkblue')+
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])+
geom_abline(intercept = coef(modH)[1],slope=coef(modH)[2])
modH=lm(counter~H,data=filter(tt,counter>head.onset,counter<head.offset))
ggplot(tt)+geom_point(aes(counter-200,G),color='darkgreen')+
geom_point(aes(counter-200,E),color='red')+
geom_point(aes(counter-200,H),color='darkblue')+
geom_abline(intercept = coef(modE)[1],slope=coef(modE)[2])+
geom_abline(intercept = coef(modH)[1],slope=coef(modH)[2])
head.offset
ggplot(tt)+geom_point(aes(counter-200,G),color='darkgreen')+
geom_point(aes(counter-200,E),color='red')+
geom_point(aes(counter-200,H),color='darkblue')+
geom_vline(xintercept = c(head.onset,head.offset))
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_vline(xintercept = c(head.onset,head.offset))
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_vline(xintercept = c(head.onset,head.offset-10))
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_vline(xintercept = c(head.onset,head.offset-20))
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_vline(xintercept = c(head.onset,head.offset-40))
modE=lm(counter~E,data=filter(tt,counter>gaze.offset,counter<head.offset-40))
modH=lm(counter~H,data=filter(tt,counter>head.onset,counter<head.offset-40))
modE
modH
#measure target
target.amp=tt$Targ[300]-tt$Targ[1]
target.amp
ggplot(tt)+geom_point(aes(counter,G),color='darkgreen')+
geom_point(aes(counter,E),color='red')+
geom_point(aes(counter,H),color='darkblue')+
geom_line(aes(counter,Targ))+
geom_vline(xintercept = c(head.onset,head.offset-40))
tt2<- filter(recal,block=='CP48ST1',trialnum==1)
names(recal)
post.saccade.VOR
#VOR
post.saccade.drift=mean(tt$Gv[(gaze.offset+10):(gaze.offset+20)])
post.saccade.head=mean(tt$Hv[(gaze.offset+10):(gaze.offset+20)])
Ev=tt$Gv-tt$Hv
post.saccade.eye=mean(Ev[(gaze.offset+10):(gaze.offset+20)])
post.saccade.VOR=post.saccade.eye/post.saccade.head
post.saccade.VOR
post.saccade.eye
post.saccade.head
plot(Ev[(gaze.offset+10):(gaze.offset+20)])
plot(Ev)
tt$Ev=Ev
qplot(counter,EV,data=tt)
qplot(counter,Ev,data=tt)
qplot(counter,Ev,data=tt)+geom_vline(c(gaze.offset+10,gaze.offset+20))
qplot(counter,Ev,data=tt)+geom_vline(xintercept =  c(gaze.offset+10,gaze.offset+20))
qplot(counter,E,data=tt)+geom_vline(xintercept =  c(gaze.offset+10,gaze.offset+20))
qplot(counter,Gv,data=tt)+geom_vline(xintercept =  c(gaze.offset+10,gaze.offset+20))
qplot(counter,Gv,data=tt)+geom_vline(xintercept =  c(gaze.offset+10,gaze.offset+20))+geom_point(aes(counter,G*10),color='darkgreen')
source('~/GitHub/ConcussionGaze/knighthelperfunctions.R', echo=TRUE)
#measure trials join to previous table if needed
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
library(plotly)
library(ggplot2)
library(dplyr)
library(stringr)
library(ggpubr)
source('knighthelperfunctions.R')
samplerate<- 304.7508/1000
h<-readRDS('DriftTest1.RDS')
control.subjects<-c('Cj21', 'hS83', 'UG56', 'wR49', 'Fq58')
h %>%
mutate(blocknum=as.factor(str_sub(block,7)),
E=G-H)%>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,blocknum,trialnum) %>%
do(measureTrial(.)) %>%
mutate(control = subject %in% control.subjects)->
hm
hm %>%
ungroup() %>%
filter(missing.gs<5) %>%
mutate(post.saccade.VOR=post.saccade.VOR*-1) %>%
filter(abs(post.saccade.head)>5,
post.saccade.VOR<2,
post.saccade.VOR>0.5
) ->
hplot
ggboxplot(data=filter(hplot,abs(post.saccade.VOR)<3,post.saccade.VOR<0,abs(post.saccade.head)>10),
x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')
ggboxplot(data=filter(hplot,abs(post.saccade.VOR)<2,post.saccade.VOR< -0.5,abs(post.saccade.head)>10),
x = "blocknum", y="post.saccade.VOR*-1",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
geom_hline(yintercept = 1,linetype=2)+
ylab('Post-saccadic VOR gain')+
xlab('Time Point')
qplot(post.saccade.VOR,binwidth=.1,data=filter(hplot,abs(post.saccade.VOR)<3))+
facet_wrap(~block,ncol=3,scales='free')+
geom_vline(xintercept = 1)+
xlab('VOR gain')
ggplot(hplot)+
geom_boxplot(aes(as.factor(blocknum),post.saccade.VOR,fill=block))+
facet_wrap(~subject,scales='free',ncol=3)+
geom_hline(yintercept = 1,color='red',alpha=0.5)+
theme(legend.position='none')
hplot %>%
filter(hplot,abs(post.saccade.VOR)<2,post.saccade.VOR< -0.5,abs(post.saccade.head)>10)
hplot %>%
filter(hplot,abs(post.saccade.VOR)<2,post.saccade.VOR< -0.5,abs(post.saccade.head)>10) %>%
# filter(abs(post.saccade.VOR)<5,
control,
hplot %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR< -0.5,abs(post.saccade.head)>10) %>%
# filter(abs(post.saccade.VOR)<5,
control,
hplot %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR< -0.5,abs(post.saccade.head)>10,
# filter(abs(post.saccade.VOR)<5,
control,
blocknum<3) %>%
ggboxplot(x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
xlab('Time Point')+
ylab('Post-saccade VOR gain')+
ggtitle('Control Subjects')
hplot %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR> 0.5,abs(post.saccade.head)>10,
# filter(abs(post.saccade.VOR)<5,
control,
blocknum<3) %>%
ggboxplot(x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
xlab('Time Point')+
ylab('Post-saccade VOR gain')+
ggtitle('Control Subjects')
hplot %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR> 0.5,abs(post.saccade.head)>10,
# filter(abs(post.saccade.VOR)<5,
control,
blocknum<3) %>%
ggboxplot(x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
geom_hline(yintercept = 1,linetype=2)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
xlab('Time Point')+
ylab('Post-saccade VOR gain')+
ggtitle('Control Subjects')
hplot %>%
ungroup() %>%
filter(subject=='xL16') %>%
filter(blocknum %in% c('5','6')) %>%
mutate(blocknum=as.factor(as.numeric(blocknum)-4))->
hplotXL
hplotconc<-filter(hplot,!control,subject!='xL16',blocknum %in% c('1','2'))
hplotconc<-rbind(ungroup(hplotconc),hplotXL)
hplotconc %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR> 0.5,abs(post.saccade.head)>10) %>%
# filter(abs(post.saccade.VOR)<5) %>%
ggboxplot(x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
geom_hline(yintercept = 1,linetype=2)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
xlab('Time Point')+
ylab('Post-saccade VOR gain')
hplot %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR> 0.5,abs(post.saccade.head)>10,
# filter(abs(post.saccade.VOR)<5,
control,
blocknum<3) %>%
ggboxplot(x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
geom_hline(yintercept = 1,linetype=2)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
xlab('Time Point')+
ylab('Post-saccade VOR gain')+
ggtitle('Control Subjects')
hplotconc %>%
filter(abs(post.saccade.VOR)<2,post.saccade.VOR> 0.5,abs(post.saccade.head)>10) %>%
# filter(abs(post.saccade.VOR)<5) %>%
ggboxplot(x = "blocknum", y="post.saccade.VOR",
color = "blocknum", palette = "jco",
facet.by = c("subject"),scales='free_x',ncol=3)+
geom_hline(yintercept = 1,linetype=2)+
# stat_compare_means(label="p.signif")+
stat_compare_means()+
theme(legend.position='none')+
xlab('Time Point')+
ylab('Post-saccade VOR gain')
