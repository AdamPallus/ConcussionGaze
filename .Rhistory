loadedfiles <- lapply(paste(path,files,sep=''),read.csv,sep='\t',header=FALSE)
head(loadedfiles[[1]])
head(loadedfiles[[2]])
head(loadedfiles[[3]])
head(loadedfiles[[4]])
head(loadedfiles[[6]])
head(loadedfiles[[8]])
head(loadedfiles[[9]])
head(loadedfiles[[10]])
temp<-loadedfiles[[10]]
plot(temp$V8[1:1000])
plot(temp$V8[1:5000])
max(temp$V8)
plot(temp$V8[1:10000])
nrow(temp)
plot(temp$V8[1:100000])
plot(temp$V8[50000:60000])
for (i in 1:nfiles) {
f<- files[i]
message(paste('Loading:',f))
# temp[[i]]=loadedfiles[[i]]
# names<-str_match(f,"(^[a-zA-Z]+)-([0-9]+)")
# loadedfiles[[i]]$block<-names[1]
# loadedfiles[[i]]$subject<-names[2]
# loadedfiles[[i]]$blocknum<-as.numeric(names[3])
#updated for 2-25-2018
#remove extra rows
loadedfiles[[i]]<- select(loadedfiles[[i]],1:9)
#files are named with Subject ID bU07 and block ST1 with ST standing for Saccade Task
names<-str_match(f,"(^[a-zA-Z0-9]{4})([a-zA-Z0-9]{3})")
loadedfiles[[i]]$block<-names[1]
loadedfiles[[i]]$subject<-names[2]
loadedfiles[[i]]$blocknum<-as.numeric(str_sub(names[3],3))
task<-str_sub(names[3],1,2)
loadedfiles[[i]]$task<- task
if (task=='AS'){ #antisaccade dask needs target data fixed
#'There are three targets in the anti saccade files
#'but only the second is useful. The central fixation is always at zero
#'If this changes, the value in V7 should be used instead of zero
targ<- loadedfiles[[i]]$V8
targ<- replace(targ,targ< -80,0)
loadedfiles[[i]]$V8=targ
}
}
loadedfiles[[i]]<- select(loadedfiles[[i]],1:9)
for (i in 1:nfiles) {
f<- files[i]
message(paste('Loading:',f))
# temp[[i]]=loadedfiles[[i]]
# names<-str_match(f,"(^[a-zA-Z]+)-([0-9]+)")
# loadedfiles[[i]]$block<-names[1]
# loadedfiles[[i]]$subject<-names[2]
# loadedfiles[[i]]$blocknum<-as.numeric(names[3])
#updated for 2-25-2018
#remove extra rows
# loadedfiles[[i]]<- select(loadedfiles[[i]],1:9)
#files are named with Subject ID bU07 and block ST1 with ST standing for Saccade Task
names<-str_match(f,"(^[a-zA-Z0-9]{4})([a-zA-Z0-9]{3})")
loadedfiles[[i]]$block<-names[1]
loadedfiles[[i]]$subject<-names[2]
loadedfiles[[i]]$blocknum<-as.numeric(str_sub(names[3],3))
task<-str_sub(names[3],1,2)
loadedfiles[[i]]$task<- task
if (task=='AS'){ #antisaccade dask needs target data fixed
#'There are three targets in the anti saccade files
#'but only the second is useful. The central fixation is always at zero
#'If this changes, the value in V7 should be used instead of zero
targ<- loadedfiles[[i]]$V8
targ<- replace(targ,targ< -80,0)
loadedfiles[[i]]$V8=targ
}
}
t <-rbindlist(loadedfiles,fill = TRUE)
head(t)
h<-t
loadnewheadfree<- function(referencefile=NULL,path="~/GitHub/ConcussionGaze/kdata/"){
require(stringr)
require(dplyr)
require(data.table)
#This function loads .csv files in a particular folder. They must have the same columns for rbind
#Saves time by only reading the csv when necessary
#get names of all files in path
files <- list.files(path=path,pattern='*.txt')
#extract neuron name eg. Bee-01
# names<-sapply(files, str_match,"^[a-zA-Z]+-[0-9]+",USE.NAMES=FALSE)
names<-sapply(files, str_match,"^[a-zA-Z0-9]+",USE.NAMES=FALSE)
# check for new cells
if (!is.null(referencefile)){
files<-files[!names %in% referencefile$neuron] #comparison
}
nfiles<-length(files)
if (nfiles>0){
message(c('New Files: ',files))
loadedfiles <- lapply(paste(path,files,sep=''),read.csv,sep='\t',header=FALSE)
t<-data.frame()
temp<- NULL
# t.old<-NULL
for (i in 1:nfiles) {
f<- files[i]
message(paste('Loading:',f))
# temp[[i]]=loadedfiles[[i]]
# names<-str_match(f,"(^[a-zA-Z]+)-([0-9]+)")
# loadedfiles[[i]]$block<-names[1]
# loadedfiles[[i]]$subject<-names[2]
# loadedfiles[[i]]$blocknum<-as.numeric(names[3])
#updated for 2-25-2018
#remove extra rows
loadedfiles[[i]]<- select(loadedfiles[[i]],1:8)
#files are named with Subject ID bU07 and block ST1 with ST standing for Saccade Task
names<-str_match(f,"(^[a-zA-Z0-9]{4})([a-zA-Z0-9]{3})")
loadedfiles[[i]]$block<-names[1]
loadedfiles[[i]]$subject<-names[2]
loadedfiles[[i]]$blocknum<-as.numeric(str_sub(names[3],3))
task<-str_sub(names[3],1,2)
loadedfiles[[i]]$task<- task
if (task=='AS'){ #antisaccade dask needs target data fixed
#'There are three targets in the anti saccade files
#'but only the second is useful. The central fixation is always at zero
#'If this changes, the value in V7 should be used instead of zero
targ<- loadedfiles[[i]]$V8
targ<- replace(targ,targ< -80,0)
loadedfiles[[i]]$V8=targ
}
}
t <-rbindlist(loadedfiles,fill = TRUE)
# t<- dplyr::select(t, -thp,-tvp,-time)
}else{
message('********NO NEW DATA********')
t<-NULL
}
return(t)
}
h<-loadnewheadfree(path=path)
head(h)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
sum(is.na(h$G))
nrow(h)
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
mutate(time=row_number(),
G=replace(G,is.na(G),0),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
hh<-h
samplerate<- 304.7508/1000
hh <- mutate(hh,
tcounter=counter/samplerate)
trialnums<- unique(hh$trialnum)
trialnums
saveRDS(hh,'AntiSaccadeTest2.RDS')
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
hh<- left_join(h,hm)
hh<- filter(hh,trialnum %in% unique(hm$trialnum))
saveRDS(hh,'AntiSaccadeTest2.RDS')
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h2
hh<- left_join(h2,hm)
hh<- filter(hh,trialnum %in% unique(hm$trialnum))
saveRDS(hh,'AntiSaccadeTest3RDS')
saveRDS(hh,'AntiSaccadeTest3.RDS')
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
saveRDS(hm,'antisaccadeDashboard2018-3-29.RDS')
names(hm)
h<-loadnewheadfree(path=path)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
mutate(time=row_number(),
G=replace(G,is.na(G),0),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
nrow(hm)
#Based on the previous report, I'm rejecting trials with 20 or more interpolated data points during the detected primary gaze shift, and trials where the latency is too short or too long. These ranges can be adjusted if future investigation warrants.
hm %>%
mutate(gaze.onset.ms=(gaze.onset-200)/samplerate) %>%
filter(missing.gs<20,
gaze.onset.ms>150,
gaze.onset.ms<500) %>%
ungroup()->
hpp
hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,10,20,30,40,50,60,70,80)))
hpp <- mutate(hpp,amp.bins.combined=cut(abs(target.amp),breaks=c(0,20,40,60,80)))
ggplot(filter(hpp,!is.na(amp.bins.combined)))+
geom_boxplot(aes(amp.bins.combined,abs(peak.gaze.velocity),fill=block))+
ylab('Peak gaze shift velocity (deg/s)')+
xlab('Target amplitude bins combined left and right (deg)')+
theme_minimal()+
ggtitle('comparison of pre and post peak gaze velocity')+
facet_wrap(~subject,ncol=1)
#
# ggplot(hpp,aes(abs(target.amp),abs(peak.gaze.velocity),color=block))+
#   geom_point()+
#   stat_smooth(method='lm')+
#   ylab('Peak gaze shift velocity (deg/s)')+
#   xlab('Target Amplitude (deg)')+
#   theme_minimal()+
#   ggtitle('comparison of pre and post peak gaze velocity')+
#   facet_wrap(~subject,ncol=1)
path<- "F:/dropbox/kdata/bad/"
h<-loadnewheadfree(path=path)
head(h)
tail(h)
sum(is.na(h$G))
sum(is.na(h$V1))
nrow(h)
filter(h,is.na(V1))
h<-complete.cases(h)
nrow(h)
head(h)
h<-loadnewheadfree(path=path)
h<-loadnewheadfree(path=path)
sum(is.na(h$V1))
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
saveRDS(hm,'antisaccadeDashboard2018-3-29.RDS')
nrow(hm)
head(hm)
path<- "F:/dropbox/kdata/anti/"
path<- "F:/dropbox/kdata/bad/"
h<-loadnewheadfree(path=path)
nrow(h)
unique(h$block)
nrow(h,block=='cg01AS3')
nrowfilter(h,block=='cg01AS3'))
nrow(filter(h,block=='cg01AS3'))
nrow(filter(h,block=='GN73AS3'))
nrow(filter(h,block=='gN73AS3'))
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
nrow(h)
h %>%
ungroup() %>%
mutate(Targ=replace(Targ,task=='AS' &  counter<200,0))->
h
nrow(h)
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
nrow(hm)
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
nrow(hm)
unique(h$trialnum)
h %>% filter(trialnum==1) %>%
h %>% filter(trialnum==1) %>% ggplot()+geom_line(aes(time,G))
h %>% filter(trialnum==2) %>% ggplot()+geom_line(aes(time,G))
h %>% filter(trialnum==3) %>% ggplot()+geom_line(aes(time,G))
h %>% filter(trialnum==4) %>% ggplot()+geom_line(aes(time,G))
h %>% filter(trialnum==5) %>% ggplot()+geom_line(aes(time,G))
h %>% filter(trialnum==5,block=='gN73AS3') %>% ggplot()+geom_line(aes(time,G))
qplot(IGP,data=h)
qplot(IGP,data=hm)
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
qplot(IGP,data=hm)
mean(hm$IGP)
path<- "F:/dropbox/kdata/anti/"
h<-loadnewheadfree(path=path)
h<-loadnewheadfree(path=path)
names(h)<- c('G','GV','H','HV','E','EV','time','Targ','block','subject','blocknum','task')
h%>%
select(G,H,Targ,block,subject,task)%>%
group_by(block) %>%
filter(!is.na(G)) %>%
mutate(time=row_number(),
Graw=G,
G=replace(smooth(G,"3R"),G==0,NA), #mark missing data as NA rather than 0
Gnospline=G,
G= applyspline(G,6),
target.velocity=parabolicdiff(Targ,7)*samplerate,
Gv=parabolicdiff(G,7)*samplerate, #calculate velocity
Hv=parabolicdiff(H,7)*samplerate,
gazeshifts=markMovementsDouble(Gv,threshold1=100,threshold2=10),
headmovement=markMovementsDouble(Hv,threshold1=10,threshold2=4)) %>%
do(markTagetMovements(t=.,buffer=200,threshold=200,trial.length=500))%>%
filter(!is.na(trialnum))->
h
qplot(IGP,data=h)+facet_wrap(~block)
h %>%
filter(!is.na(trialnum)) %>%
group_by(task,subject,block,trialnum) %>%
do(measureTrial(.))->
hm
qplot(IGP,data=hm)+facet_wrap(~block)
qplot(IGP,data=hm)+facet_wrap(~block)
qplot(IGP,data=hm,binwidth=1)+facet_wrap(~block)
qplot(IGP,data=hm,binwidth=1)+facet_wrap(~block,ncol=3)
qplot(IGP,data=hm,binwidth=1)+facet_wrap(~block,ncol=3)+geom_vline(xintercept = 0)
qplot(IGP,data=hm,binwidth=1)+facet_wrap(~block,ncol=3)+geom_vline(xintercept = 0,color='hotpink')
hm %>%
mutate(recenter=(task=='AS' & abs(IGP)>10)) %>%
filter(!recenter) %>%
select(-recenter)->
hm
saveRDS(hm,'antisaccadeDashboard2018-3-29.RDS')
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0)) %>%
group_by(block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
names(hm)
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0)) %>%
group_by(block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
hm %>%
# mutate(anti.saccade=(gaze.amp*target.amp)<0)) %>%
group_by(block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0))->
hs
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0))->
hs
%>%
group_by(block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0)%>%
group_by(block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
head(hs)
hs
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0)%>%
group_by(subject,block,blocknum) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
hm %>%
mutate(anti.saccade=(gaze.amp*target.amp)<0)%>%
group_by(subject,block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
hm %>%
mutate(blocknum=as.numeric(str_sub(block,7)),
anti.saccade=(gaze.amp*target.amp)<0)%>%
group_by(subject,block) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
head(hs)
hm %>%
mutate(blocknum=as.numeric(str_sub(block,7)),
anti.saccade=(gaze.amp*target.amp)<0)%>%
group_by(subject,block,blocknum) %>%
summarize(misdirect=sum(!anti.saccade))->
hs
hs
hm %>%
mutate(blocknum=as.numeric(str_sub(block,7)),
anti.saccade=(gaze.amp*target.amp)<0)%>%
group_by(subject,block,blocknum) %>%
summarize(misdirect=sum(!anti.saccade),
n=n(),
misdirect.ratio=misdirect/n)->
hs
hs
qplot(blocknum,misdirect.ratio,data=hs)
qplot(blocknum,misdirect.ratio,data=hs,color=subject,geom='bar')
qplot(blocknum,misdirect.ratio,data=hs,color=subject,geom='bar',stat='identity')
ggplot(hs)+
geom_bar(aes(blocknum,misdirect))
ggplot(hs)+
geom_bar(aes(blocknum,misdirect),stat='identity')
ggplot(hs)+
geom_bar(aes(blocknum,misdirect.ratio),stat='identity')
ggplot(hs)+
geom_bar(aes(blocknum,misdirect.ratio,color=subject),stat='identity')
ggplot(hs)+
geom_bar(aes(blocknum,misdirect.ratio,fill=subject),stat='identity')
ggplot(hs)+
geom_bar(aes(blocknum,misdirect.ratio,fill=subject),stat='identity',position='dodge')
write.csv(hs,'Anti-saccade-statsV1.csv')
